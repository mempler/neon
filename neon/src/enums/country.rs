use neon_io::{
    reader::Reader,
    serializable::{Deserializable, Serializable},
    writer::Writer,
};

#[repr(u8)]
#[derive(Copy, Clone, Debug)]
pub enum Country {
    XX = 0,
    AD = 3,
    AF = 5,
    AI = 7,
    AL = 8,
    AM = 9,
    AO = 11,
    AQ = 12,
    AR = 13,
    AS = 14,
    AT = 15,
    AU = 16,
    AW = 17,
    AZ = 18,
    BB = 20,
    BD = 21,
    BE = 22,
    BF = 23,
    BG = 24,
    BH = 25,
    BI = 26,
    BJ = 27,
    BM = 28,
    BO = 30,
    BR = 31,
    BS = 32,
    BT = 33,
    BV = 34,
    BW = 35,
    BY = 36,
    BZ = 37,
    CA = 38,
    CC = 39,
    CF = 41,
    CH = 43,
    CK = 45,
    CL = 46,
    CM = 47,
    CN = 48,
    CO = 49,
    CR = 50,
    CU = 51,
    CV = 52,
    CX = 53,
    CY = 54,
    CZ = 55,
    DE = 56,
    DJ = 57,
    DK = 58,
    DM = 59,
    DO = 60,
    DZ = 61,
    EC = 62,
    EE = 63,
    EG = 64,
    EH = 65,
    ER = 66,
    ES = 67,
    ET = 68,
    FI = 69,
    FJ = 70,
    FK = 71,
    FO = 73,
    FR = 74,
    GA = 76,
    GB = 77,
    GD = 78,
    GE = 79,
    GF = 80,
    GH = 81,
    GI = 82,
    GL = 83,
    GM = 84,
    GN = 85,
    GP = 86,
    GQ = 87,
    GR = 88,
    GT = 90,
    GU = 91,
    GW = 92,
    GY = 93,
    HK = 94,
    HN = 96,
    HR = 97,
    HT = 98,
    HU = 99,
    ID = 100,
    IE = 101,
    IL = 102,
    IN = 103,
    IO = 104,
    IQ = 105,
    IS = 107,
    IT = 108,
    JM = 109,
    JO = 110,
    JP = 111,
    KE = 112,
    KG = 113,
    KH = 114,
    KI = 115,
    KM = 116,
    KW = 120,
    KY = 121,
    KZ = 122,
    LB = 124,
    LI = 126,
    LK = 127,
    LR = 128,
    LS = 129,
    LT = 130,
    LU = 131,
    LV = 132,
    MA = 134,
    MC = 135,
    MG = 137,
    MH = 138,
    ML = 140,
    MM = 141,
    MN = 142,
    MP = 144,
    MQ = 145,
    MR = 146,
    MS = 147,
    MT = 148,
    MU = 149,
    MV = 150,
    MW = 151,
    MX = 152,
    MY = 153,
    MZ = 154,
    NA = 155,
    NC = 156,
    NE = 157,
    NF = 158,
    NG = 159,
    NI = 160,
    NL = 161,
    NO = 162,
    NP = 163,
    NR = 164,
    NU = 165,
    NZ = 166,
    OM = 167,
    PA = 168,
    PE = 169,
    PF = 170,
    PG = 171,
    PH = 172,
    PK = 173,
    PL = 174,
    PN = 176,
    PR = 177,
    PS = 178,
    PT = 179,
    PW = 180,
    PY = 181,
    QA = 182,
    RE = 183,
    RO = 184,
    RW = 186,
    SA = 187,
    SB = 188,
    SC = 189,
    SD = 190,
    SE = 191,
    SG = 192,
    SI = 194,
    SJ = 195,
    SK = 196,
    SL = 197,
    SM = 198,
    SN = 199,
    SO = 200,
    SR = 201,
    ST = 202,
    SV = 203,
    SZ = 205,
    TC = 206,
    TD = 207,
    TF = 208,
    TG = 209,
    TH = 210,
    TJ = 211,
    TK = 212,
    TM = 213,
    TN = 214,
    TO = 215,
    TR = 217,
    TT = 218,
    TV = 219,
    TW = 220,
    TZ = 221,
    UA = 222,
    UG = 223,
    US = 225,
    UY = 226,
    UZ = 227,
    VE = 230,
    VN = 233,
    VU = 234,
    WF = 235,
    WS = 236,
    YE = 237,
    YT = 238,
    RS = 239,
    ZA = 240,
    ZM = 241,
    ME = 242,
    ZW = 243,
    AX = 247,
    GG = 248,
    IM = 249,
    JE = 250,
    MF = 252,
}

impl Deserializable for Country {
    type Output<'a> = Country;

    fn deserialize<'a>(reader: &mut Reader<'a>) -> Option<Self::Output<'a>> {
        match reader.read_u8()? {
            0 => Some(Country::XX),
            3 => Some(Country::AD),
            5 => Some(Country::AF),
            7 => Some(Country::AI),
            8 => Some(Country::AL),
            9 => Some(Country::AM),
            11 => Some(Country::AO),
            12 => Some(Country::AQ),
            13 => Some(Country::AR),
            14 => Some(Country::AS),
            15 => Some(Country::AT),
            16 => Some(Country::AU),
            17 => Some(Country::AW),
            18 => Some(Country::AZ),
            20 => Some(Country::BB),
            21 => Some(Country::BD),
            22 => Some(Country::BE),
            23 => Some(Country::BF),
            24 => Some(Country::BG),
            25 => Some(Country::BH),
            26 => Some(Country::BI),
            27 => Some(Country::BJ),
            28 => Some(Country::BM),
            30 => Some(Country::BO),
            31 => Some(Country::BR),
            32 => Some(Country::BS),
            33 => Some(Country::BT),
            34 => Some(Country::BV),
            35 => Some(Country::BW),
            36 => Some(Country::BY),
            37 => Some(Country::BZ),
            38 => Some(Country::CA),
            39 => Some(Country::CC),
            41 => Some(Country::CF),
            43 => Some(Country::CH),
            45 => Some(Country::CK),
            46 => Some(Country::CL),
            47 => Some(Country::CM),
            48 => Some(Country::CN),
            49 => Some(Country::CO),
            50 => Some(Country::CR),
            51 => Some(Country::CU),
            52 => Some(Country::CV),
            53 => Some(Country::CX),
            54 => Some(Country::CY),
            55 => Some(Country::CZ),
            56 => Some(Country::DE),
            57 => Some(Country::DJ),
            58 => Some(Country::DK),
            59 => Some(Country::DM),
            60 => Some(Country::DO),
            61 => Some(Country::DZ),
            62 => Some(Country::EC),
            63 => Some(Country::EE),
            64 => Some(Country::EG),
            65 => Some(Country::EH),
            66 => Some(Country::ER),
            67 => Some(Country::ES),
            68 => Some(Country::ET),
            69 => Some(Country::FI),
            70 => Some(Country::FJ),
            71 => Some(Country::FK),
            73 => Some(Country::FO),
            74 => Some(Country::FR),
            76 => Some(Country::GA),
            77 => Some(Country::GB),
            78 => Some(Country::GD),
            79 => Some(Country::GE),
            80 => Some(Country::GF),
            81 => Some(Country::GH),
            82 => Some(Country::GI),
            83 => Some(Country::GL),
            84 => Some(Country::GM),
            85 => Some(Country::GN),
            86 => Some(Country::GP),
            87 => Some(Country::GQ),
            88 => Some(Country::GR),
            90 => Some(Country::GT),
            91 => Some(Country::GU),
            92 => Some(Country::GW),
            93 => Some(Country::GY),
            94 => Some(Country::HK),
            96 => Some(Country::HN),
            97 => Some(Country::HR),
            98 => Some(Country::HT),
            99 => Some(Country::HU),
            100 => Some(Country::ID),
            101 => Some(Country::IE),
            102 => Some(Country::IL),
            103 => Some(Country::IN),
            104 => Some(Country::IO),
            105 => Some(Country::IQ),
            107 => Some(Country::IS),
            108 => Some(Country::IT),
            109 => Some(Country::JM),
            110 => Some(Country::JO),
            111 => Some(Country::JP),
            112 => Some(Country::KE),
            113 => Some(Country::KG),
            114 => Some(Country::KH),
            115 => Some(Country::KI),
            116 => Some(Country::KM),
            120 => Some(Country::KW),
            121 => Some(Country::KY),
            122 => Some(Country::KZ),
            124 => Some(Country::LB),
            126 => Some(Country::LI),
            127 => Some(Country::LK),
            128 => Some(Country::LR),
            129 => Some(Country::LS),
            130 => Some(Country::LT),
            131 => Some(Country::LU),
            132 => Some(Country::LV),
            134 => Some(Country::MA),
            135 => Some(Country::MC),
            137 => Some(Country::MG),
            138 => Some(Country::MH),
            140 => Some(Country::ML),
            141 => Some(Country::MM),
            142 => Some(Country::MN),
            144 => Some(Country::MP),
            145 => Some(Country::MQ),
            146 => Some(Country::MR),
            147 => Some(Country::MS),
            148 => Some(Country::MT),
            149 => Some(Country::MU),
            150 => Some(Country::MV),
            151 => Some(Country::MW),
            152 => Some(Country::MX),
            153 => Some(Country::MY),
            154 => Some(Country::MZ),
            155 => Some(Country::NA),
            156 => Some(Country::NC),
            157 => Some(Country::NE),
            158 => Some(Country::NF),
            159 => Some(Country::NG),
            160 => Some(Country::NI),
            161 => Some(Country::NL),
            162 => Some(Country::NO),
            163 => Some(Country::NP),
            164 => Some(Country::NR),
            165 => Some(Country::NU),
            166 => Some(Country::NZ),
            167 => Some(Country::OM),
            168 => Some(Country::PA),
            169 => Some(Country::PE),
            170 => Some(Country::PF),
            171 => Some(Country::PG),
            172 => Some(Country::PH),
            173 => Some(Country::PK),
            174 => Some(Country::PL),
            176 => Some(Country::PN),
            177 => Some(Country::PR),
            178 => Some(Country::PS),
            179 => Some(Country::PT),
            180 => Some(Country::PW),
            181 => Some(Country::PY),
            182 => Some(Country::QA),
            183 => Some(Country::RE),
            184 => Some(Country::RO),
            186 => Some(Country::RW),
            187 => Some(Country::SA),
            188 => Some(Country::SB),
            189 => Some(Country::SC),
            190 => Some(Country::SD),
            191 => Some(Country::SE),
            192 => Some(Country::SG),
            194 => Some(Country::SI),
            195 => Some(Country::SJ),
            196 => Some(Country::SK),
            197 => Some(Country::SL),
            198 => Some(Country::SM),
            199 => Some(Country::SN),
            200 => Some(Country::SO),
            201 => Some(Country::SR),
            202 => Some(Country::ST),
            203 => Some(Country::SV),
            205 => Some(Country::SZ),
            206 => Some(Country::TC),
            207 => Some(Country::TD),
            208 => Some(Country::TF),
            209 => Some(Country::TG),
            210 => Some(Country::TH),
            211 => Some(Country::TJ),
            212 => Some(Country::TK),
            213 => Some(Country::TM),
            214 => Some(Country::TN),
            215 => Some(Country::TO),
            217 => Some(Country::TR),
            218 => Some(Country::TT),
            219 => Some(Country::TV),
            220 => Some(Country::TW),
            221 => Some(Country::TZ),
            222 => Some(Country::UA),
            223 => Some(Country::UG),
            225 => Some(Country::US),
            226 => Some(Country::UY),
            227 => Some(Country::UZ),
            230 => Some(Country::VE),
            233 => Some(Country::VN),
            234 => Some(Country::VU),
            235 => Some(Country::WF),
            236 => Some(Country::WS),
            237 => Some(Country::YE),
            238 => Some(Country::YT),
            239 => Some(Country::RS),
            240 => Some(Country::ZA),
            241 => Some(Country::ZM),
            242 => Some(Country::ME),
            243 => Some(Country::ZW),
            247 => Some(Country::AX),
            248 => Some(Country::GG),
            249 => Some(Country::IM),
            250 => Some(Country::JE),
            252 => Some(Country::MF),
            _ => Some(Country::XX),
        }
    }
}

impl Serializable for Country {
    fn serialize(&self, writer: &mut Writer) {
        writer.write_u8(*self as _)
    }
}
